{"version":3,"file":"dice.js","sources":["pages/game/dice.vue","pages/game/dice.vue?type=page"],"sourcesContent":["<template>\n  <!-- 将整个页面包装在一个相对定位的容器中 -->\n  <view class=\"page-container\">\n    <!-- 添加标题区域 -->\n    <view class=\"game-header\">\n      <text class=\"title neon-text\">骰子游戏</text>\n      <text class=\"subtitle glow-text\">今晚 就看你的了</text>\n    </view>\n    \n    <view class=\"game-container\">\n      <!-- 骰蛊区域 -->\n      <view class=\"canvas-container glow-effect\" :class=\"{ 'hidden': showOptions }\">\n        <canvas \n          type=\"webgl\" \n          id=\"dice-container\"\n          class=\"dice-canvas\"\n          @touchstart=\"onTouchStart\"\n          @touchmove=\"onTouchMove\"\n          @touchend=\"onTouchEnd\"\n        ></canvas>\n      </view>\n      \n      <!-- 按钮区域 -->\n      <view class=\"button-container\">\n        <view class=\"dice-count-selector neon-button\" @tap=\"showDiceOptions\">\n          <text>{{ diceCount }}个骰子</text>\n        </view>\n        <view class=\"shake-button neon-button\" @tap=\"shakeDiceCup\">摇骰子</view>\n      </view>\n      \n      <!-- 弹窗层 -->\n      <view \n        class=\"modal\"\n        v-if=\"showOptions\"\n      >\n        <view class=\"modal-content\">\n          <text class=\"modal-title neon-text\">选择骰子数量</text>\n          <view class=\"modal-options-container\">\n            <view class=\"options-row\">\n              <view \n                v-for=\"n in 3\" \n                :key=\"n\" \n                class=\"modal-option\"\n                :class=\"{ 'active': diceCount === n }\"\n                @tap=\"selectDiceCount(n)\"\n              >\n                {{ n }}\n              </view>\n            </view>\n            <view class=\"options-row\">\n              <view \n                v-for=\"n in 3\" \n                :key=\"n + 3\" \n                class=\"modal-option\"\n                :class=\"{ 'active': diceCount === (n + 3) }\"\n                @tap=\"selectDiceCount(n + 3)\"\n              >\n                {{ n + 3 }}\n              </view>\n            </view>\n          </view>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nimport { createScopedThreejs } from 'threejs-miniprogram';\nimport { markRaw, ref } from 'vue';\n\nexport default {\n  setup() {\n    const diceCount = ref(3);\n    const showOptions = ref(false);\n    \n    return {\n      diceCount,\n      showOptions\n    }\n  },\n  data() {\n    return {\n      THREE: null,\n      scene: null,\n      camera: null,\n      renderer: null,\n      diceCup: null,\n      isDragging: false,\n      previousTouch: null,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      canvas: null,\n      startTouch: null,\n      startRotation: null,\n      isShaking: false,\n      diceTextures: [],\n      dices: [],\n      textureLoader: null,\n      decorativeLines: [],\n      pointLight1: null,\n      pointLight2: null,\n      woodTexture: null,\n    }\n  },\n  async mounted() {\n    try {\n      // 增加延迟确保 canvas 节点已经准备好\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const sysInfo = uni.getSystemInfoSync();\n      this.canvasWidth = sysInfo.windowWidth;\n      this.canvasHeight = sysInfo.windowHeight;\n      \n      // 确保在初始化 Three.js 之前获取到 canvas 上下文\n      const query = uni.createSelectorQuery().in(this);\n      const canvas = await new Promise((resolve, reject) => {\n        query.select('#dice-container')\n          .node()\n          .exec((res) => {\n            if (res[0] && res[0].node) {\n              resolve(res[0].node);\n            } else {\n              reject(new Error('Canvas element not found'));\n            }\n          });\n      });\n      \n      this.canvas = markRaw(canvas);\n      const gl = canvas.getContext('webgl', {\n        alpha: true,\n        antialias: true,\n        premultipliedAlpha: false,\n        preserveDrawingBuffer: false\n      });\n      if (!gl) {\n        throw new Error('WebGL context not available');\n      }\n      \n      // 添加调试输出\n      console.log('WebGL Context Attributes:', gl.getContextAttributes());\n      console.log('Canvas:', {\n        width: canvas.width,\n        height: canvas.height,\n        style: canvas.style\n      });\n      \n      await this.initThreeJS();\n      await this.loadTextures();\n      this.createDiceCup();\n      this.createDices();\n      this.animate();\n    } catch (error) {\n      console.error('Initialization error:', error);\n    }\n  },\n  methods: {\n    initThreeJS() {\n      return new Promise((resolve, reject) => {\n        const query = uni.createSelectorQuery().in(this);\n        query.select('#dice-container')\n          .node()\n          .exec((res) => {\n            if (!res[0] || !res[0].node) {\n              reject(new Error('Canvas element not found'));\n              return;\n            }\n\n            const canvas = markRaw(res[0].node);\n            this.canvas = canvas;\n            \n            // 获取系统信息来设置像素比\n            const sysInfo = uni.getSystemInfoSync();\n            const pixelRatio = sysInfo.pixelRatio || 1;\n            \n            this.canvasHeight = this.canvasHeight * 0.75;\n            canvas.width = this.canvasWidth * pixelRatio;  // 考虑像素比\n            canvas.height = this.canvasHeight * pixelRatio; // 考虑像素比\n\n            const gl = canvas.getContext('webgl', {\n              alpha: true,\n              antialias: true,\n              premultipliedAlpha: false,\n              preserveDrawingBuffer: false\n            });\n\n            // 添加调试输出\n            console.log('WebGL Context Attributes:', gl.getContextAttributes());\n            console.log('Canvas:', {\n              width: canvas.width,\n              height: canvas.height,\n              style: canvas.style\n            });\n\n            try {\n              this.THREE = markRaw(createScopedThreejs(canvas));\n              this.scene = markRaw(new this.THREE.Scene());\n              \n              // 添加调试输出\n              console.log('THREE.js Scene:', {\n                background: this.scene.background,\n                children: this.scene.children.length\n              });\n              \n              this.scene.background = null;\n              \n              // 简化光照，只使用一个环境光和一个主光源\n              const ambientLight = markRaw(new this.THREE.AmbientLight(0xffffff, 0.7));\n              this.scene.add(ambientLight);\n\n              // 主光源 - 从上方打光，角度与相机一致\n              const mainLight = markRaw(new this.THREE.DirectionalLight(0xffffff, 0.3));\n              mainLight.position.set(0, 8, 4);\n              this.scene.add(mainLight);\n\n              // 调整相机位置为从上往下看30度\n              this.camera = markRaw(new this.THREE.PerspectiveCamera(\n                45,             // 视角\n                this.canvasWidth / this.canvasHeight,\n                0.1,\n                1000\n              ));\n              \n              // 计算相机位置：从上往下看30度\n              const distance = 12;\n              const angleInRadians = Math.PI * 60 / 180;  // 使用60度，这样从上往下看就是30度\n              \n              this.camera.position.set(\n                0,                                    // x = 0 保持正对\n                distance * Math.cos(angleInRadians),  // y = 距离 * cos(60°)\n                distance * Math.sin(angleInRadians)   // z = 距离 * sin(60°)\n              );\n              \n              this.camera.lookAt(0, 0, 0);\n\n              this.renderer = markRaw(new this.THREE.WebGLRenderer({\n                canvas,\n                context: gl,\n                antialias: true,\n                alpha: true,\n                premultipliedAlpha: false,\n                preserveDrawingBuffer: false\n              }));\n              \n              // 使用系统像素比\n              this.renderer.setPixelRatio(pixelRatio);\n              this.renderer.setSize(this.canvasWidth, this.canvasHeight);\n              this.renderer.setClearColor(0x000000, 0);\n              this.renderer.setClearAlpha(0);\n              \n              gl.clearColor(0.0, 0.0, 0.0, 0.0);\n              gl.clear(gl.COLOR_BUFFER_BIT);\n              \n              resolve();\n            } catch (error) {\n              console.error('THREE.js initialization error:', error);\n              reject(error);\n            }\n          });\n      });\n    },\n\n    createDiceCup() {\n      const material = markRaw(new this.THREE.MeshPhongMaterial({\n        color: 0xB0E2FF,\n        transparent: false,\n        side: this.THREE.DoubleSide,\n        shininess: 0,        \n        specular: 0x000000,  \n        flatShading: false,  \n      }));\n      \n      // 修改骰蛊尺寸\n      const topRadius = 2.2;     // 稍微增大顶部半径\n      const bottomRadius = 2.8;  // 稍微增大底部半径\n      const height = 5;         // 增加高度 (原来是4)\n      const segments = 32;\n      \n      const bodyGeometry = markRaw(new this.THREE.CylinderGeometry(\n        topRadius,\n        bottomRadius,\n        height,\n        segments,\n        1,\n        true\n      ));\n      \n      // 更新顶部盖子尺寸\n      const lidGeometry = markRaw(new this.THREE.CircleGeometry(\n        topRadius,\n        segments\n      ));\n      \n      // 创建骰蛊主体和盖子\n      const body = markRaw(new this.THREE.Mesh(bodyGeometry, material));\n      const lid = markRaw(new this.THREE.Mesh(lidGeometry, material));\n      \n      // 将盖子放在正确的位置\n      lid.position.y = height/2;\n      lid.rotation.x = -Math.PI/2;\n      \n      // 创建一个组来包含主体和盖子\n      this.diceCup = markRaw(new this.THREE.Group());\n      this.diceCup.add(body);\n      this.diceCup.add(lid);\n      \n      // 修改：调整整体位置\n      this.diceCup.position.y = 0;  // 向上移动 (原来是-1)\n      this.diceCup.position.z = 0;\n      this.diceCup.rotation.x = 0;\n      \n      this.diceCup.userData = {\n        pivotPoint: {\n          y: 0,  // 更新 pivotPoint 的 y 值 (原来是-1)\n          z: 0\n        }\n      };\n      \n      this.scene.add(this.diceCup);\n    },\n\n    animate() {\n      const animate = () => {\n        if (this.renderer && this.scene && this.camera) {\n          // 更新光照位置，创造细微的光照变化\n          const time = Date.now() * 0.001;\n          const radius = 0.2;\n          if (this.scene.children) {\n            this.scene.children.forEach(child => {\n              if (child instanceof this.THREE.DirectionalLight) {\n                // 让光源位置轻微摆动\n                const originalX = child.position.x;\n                const originalZ = child.position.z;\n                child.position.x = originalX + Math.sin(time) * radius;\n                child.position.z = originalZ + Math.cos(time) * radius;\n              }\n            });\n          }\n          \n          this.renderer.render(this.scene, this.camera);\n        }\n        \n        if (this.canvas) {\n          this.canvas.requestAnimationFrame(animate);\n        }\n      };\n\n      if (this.canvas) {\n        this.canvas.requestAnimationFrame(animate);\n      }\n    },\n\n    onTouchStart(e) {\n      if (!this.diceCup || !this.diceCup.userData || !this.diceCup.userData.pivotPoint) {\n        // 确保 pivotPoint 存在\n        if (this.diceCup) {\n          this.diceCup.userData = {\n            pivotPoint: {\n              y: 0,\n              z: 0\n            }\n          };\n        }\n      }\n      \n      this.isDragging = true;\n      this.previousTouch = e.touches[0];\n      this.startTouch = e.touches[0];\n      \n      // 记录开始时的骰盅旋转状态\n      if (this.diceCup) {\n        this.startRotation = {\n          x: this.diceCup.rotation.x,\n          z: this.diceCup.rotation.z\n        };\n      }\n    },\n\n    onTouchMove(e) {\n      if (!this.isDragging || !this.previousTouch || !this.diceCup) return;\n      \n      const touch = e.touches[0];\n      const deltaY = this.startTouch.pageY - touch.pageY;\n      const progress = Math.min(Math.max(deltaY * 0.003, 0), 1);\n      const maxRotation = Math.PI/4;\n      this.diceCup.rotation.x = -Math.PI/12 - maxRotation * progress;\n      \n      const radius = 3.5;\n      const angle = maxRotation * progress;\n      const offsetY = radius * (1 - Math.cos(angle));\n      \n      this.diceCup.position.y = this.diceCup.userData.pivotPoint.y + offsetY;\n      \n      // 修改：增加骰子前移的距离\n      if (this.dices && this.dices.length > 0) {\n        const zOffset = progress * 2.5; // 增加到2.5个单位 (原来是1.5)\n        this.dices.forEach(dice => {\n          dice.position.z = dice.userData.originalZ + zOffset;\n        });\n      }\n      \n      this.previousTouch = touch;\n    },\n\n    onTouchEnd() {\n      if (this.diceCup) {\n        // 如果没有揭开足够角度，就回到原位\n        if (this.diceCup.rotation.x > -Math.PI/12 - Math.PI/4) {\n          this.animateClose();\n        }\n      }\n      \n      this.isDragging = false;\n      this.previousTouch = null;\n      this.startTouch = null;\n    },\n\n    animateClose() {\n      if (!this.diceCup || !this.diceCup.userData.pivotPoint) {\n        this.diceCup.userData.pivotPoint = {\n          y: 0,\n          z: 0\n        };\n      }\n\n      const startPosY = this.diceCup.position.y;\n      const startRotX = this.diceCup.rotation.x;\n      const pivotPoint = this.diceCup.userData.pivotPoint;\n      let progress = 0;\n      \n      const closeAnimation = () => {\n        progress += 0.08;\n        if (progress < 1) {\n          const t = 1 - Math.pow(1 - progress, 3);\n          \n          const newPosY = startPosY + (pivotPoint.y - startPosY) * t;\n          this.diceCup.position.y = newPosY;\n          this.diceCup.rotation.x = startRotX + (-Math.PI/12 - startRotX) * t;\n          \n          // 修改：使用相同的前移距离\n          if (this.dices && this.dices.length > 0) {\n            const remainingProgress = 1 - t;\n            this.dices.forEach(dice => {\n              const zOffset = remainingProgress * 2.5; // 与 onTouchMove 保持一致\n              dice.position.z = dice.userData.originalZ + zOffset;\n            });\n          }\n          \n          if (this.canvas) {\n            this.canvas.requestAnimationFrame(closeAnimation);\n          }\n        } else {\n          this.diceCup.position.y = pivotPoint.y;\n          this.diceCup.rotation.x = -Math.PI/12;\n          \n          // 添加：确保骰子完全回到原始位置\n          if (this.dices && this.dices.length > 0) {\n            this.dices.forEach(dice => {\n              dice.position.z = dice.userData.originalZ;\n            });\n          }\n        }\n      };\n      \n      if (this.canvas) {\n        this.canvas.requestAnimationFrame(closeAnimation);\n      }\n    },\n\n    async loadTextures() {\n      this.textureLoader = markRaw(new this.THREE.TextureLoader());\n      \n      try {\n        // 加载骰蛊纹理\n        const woodTexture = await new Promise((resolve) => {\n          this.textureLoader.load('/static/images/game1/tougu.png', (texture) => {\n            texture.wrapS = this.THREE.RepeatWrapping;\n            texture.wrapT = this.THREE.RepeatWrapping;\n            texture.repeat.set(1, 1);  // 可以根据需要调整重复次数\n            resolve(markRaw(texture));\n          });\n        });\n        this.woodTexture = woodTexture;\n\n        // 分别加载骰子纹理\n        this.diceTextures = [];\n        for (let i = 0; i < 6; i++) {\n          const texture = await new Promise((resolve) => {\n            this.textureLoader.load(`/static/images/game1/dice${i + 1}.png`, (texture) => {\n              resolve(markRaw(texture));\n            });\n          });\n          this.diceTextures.push(texture);\n        }\n      } catch (error) {\n        console.error('Error loading textures:', error);\n      }\n    },\n\n    createDices() {\n      const materials = this.diceTextures.map(texture => {\n        return markRaw(new this.THREE.MeshBasicMaterial({ \n          map: texture,\n          transparent: false,\n          opacity: 1,\n          depthWrite: true,\n          depthTest: true,\n        }));\n      });\n      \n      const diceSize = 0.6;\n      const geometry = markRaw(new this.THREE.BoxGeometry(diceSize, diceSize, diceSize));\n      geometry.computeBoundingBox();\n      \n      // 计算骰子分布位置\n      const positions = this.calculateDicePositions(this.diceCount, diceSize);\n      \n      this.dices = [];\n      const baseY = -2.5;\n\n      // 创建骰子并放置在计算好的位置上\n      for (let i = 0; i < this.diceCount; i++) {\n        const dice = markRaw(new this.THREE.Mesh(geometry, materials));\n        const pos = positions[i];\n        \n        dice.position.set(pos.x, baseY, pos.z);\n        dice.rotation.y = Math.random() * Math.PI * 2;\n        \n        // 保存原始位置\n        dice.userData = {\n          originalX: dice.position.x,\n          originalY: dice.position.y,\n          originalZ: dice.position.z\n        };\n        \n        this.dices.push(dice);\n        this.scene.add(dice);\n      }\n    },\n\n    calculateDicePositions(count, diceSize) {\n      const positions = [];\n      const spacing = diceSize * 1.2; // 在骰子之间留出20%的间距\n      const maxRadius = 2.0; // 最大分布半径\n      \n      if (count === 1) {\n        positions.push({ x: 0, z: 0 });\n      } else if (count <= 6) {\n        // 单圈分布\n        const radius = Math.min(maxRadius, spacing);\n        for (let i = 0; i < count; i++) {\n          const angle = (i / count) * Math.PI * 2;\n          positions.push({\n            x: Math.cos(angle) * radius,\n            z: Math.sin(angle) * radius\n          });\n        }\n      } else {\n        // 双圈分布\n        const innerCount = Math.floor(count / 2);\n        const outerCount = count - innerCount;\n        \n        // 内圈\n        const innerRadius = spacing;\n        for (let i = 0; i < innerCount; i++) {\n          const angle = (i / innerCount) * Math.PI * 2;\n          positions.push({\n            x: Math.cos(angle) * innerRadius,\n            z: Math.sin(angle) * innerRadius\n          });\n        }\n        \n        // 外圈\n        const outerRadius = spacing * 2;\n        for (let i = 0; i < outerCount; i++) {\n          const angle = (i / outerCount) * Math.PI * 2;\n          positions.push({\n            x: Math.cos(angle) * outerRadius,\n            z: Math.sin(angle) * outerRadius\n          });\n        }\n      }\n      \n      return positions;\n    },\n\n    randomizeDice() {\n      const baseY = -2.5;\n      const positions = this.calculateDicePositions(this.dices.length, 0.6);\n      \n      // 打乱位置数组\n      for (let i = positions.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [positions[i], positions[j]] = [positions[j], positions[i]];\n      }\n\n      // 重新分配骰子位置\n      for (let i = 0; i < this.dices.length; i++) {\n        const dice = this.dices[i];\n        const pos = positions[i];\n        \n        dice.position.set(pos.x, baseY, pos.z);\n        \n        // 随机选择要朝上的面（1-6）\n        const face = Math.floor(Math.random() * 6) + 1;\n        \n        // 重置旋转\n        dice.rotation.set(0, 0, 0);\n        \n        // 根据选择的面设置标准90度旋转\n        switch(face) {\n          case 1: // 1朝上\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n          case 2: // 2朝上\n            dice.rotation.x = Math.PI * 0.5;\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n          case 3: // 3朝上\n            dice.rotation.z = -Math.PI * 0.5;\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n          case 4: // 4朝上\n            dice.rotation.z = Math.PI * 0.5;\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n          case 5: // 5朝上\n            dice.rotation.x = -Math.PI * 0.5;\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n          case 6: // 6朝上\n            dice.rotation.x = Math.PI;\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n        }\n        \n        // 更新原始位置\n        dice.userData.originalX = dice.position.x;\n        dice.userData.originalZ = dice.position.z;\n      }\n    },\n\n    shakeDiceCup() {\n      if (this.diceCup && !this.isShaking) {\n        this.isShaking = true;\n        let startTime = Date.now();\n        const duration = 1000;\n        const amplitude = 1.5;\n        const frequency = 8;\n        \n        const shakeAnimation = () => {\n          const elapsed = Date.now() - startTime;\n          const progress = elapsed / duration;\n          \n          if (progress < 1) {\n            // 使用衰减的正弦函数创建摇动效果\n            const decay = 1 - progress; // 随时间衰减\n            const offset = Math.sin(progress * Math.PI * frequency) * amplitude * decay;\n            \n            // 应用左右摇动\n            this.diceCup.position.x = offset;\n            \n            // 添加轻微的旋转效果\n            this.diceCup.rotation.z = -offset * 0.1;\n            \n            // 更新骰子位置\n            this.dices.forEach(dice => {\n              // 计算新位置\n              let newX = dice.userData.originalX + offset;\n              let newZ = dice.userData.originalZ;\n              \n              // 检查是否超出骰蛊底部范围\n              const distanceFromCenter = Math.sqrt(newX * newX + newZ * newZ);\n              if (distanceFromCenter > 2.4) {\n                // 如果超出范围，将位置调整到边界上\n                const angle = Math.atan2(newZ, newX);\n                newX = Math.cos(angle) * 2.4;\n                newZ = Math.sin(angle) * 2.4;\n              }\n              \n              dice.position.x = newX;\n              dice.position.z = newZ;\n              \n              // 添加轻微的旋转\n              dice.rotation.x += (Math.random() - 0.5) * 0.1;\n              dice.rotation.z += (Math.random() - 0.5) * 0.1;\n            });\n            \n            if (this.canvas) {\n              this.canvas.requestAnimationFrame(shakeAnimation);\n            }\n          } else {\n            // 动画结束，恢复原位\n            this.diceCup.position.x = 0;\n            this.diceCup.rotation.z = 0;\n            this.isShaking = false;\n            \n            // 重新随机化骰子位置\n            this.randomizeDice();\n          }\n        };\n        \n        if (this.canvas) {\n          this.canvas.requestAnimationFrame(shakeAnimation);\n        }\n      }\n    },\n\n    showDiceOptions() {\n      this.showOptions = true;\n      // 隐藏骰蛊和骰子\n      if (this.diceCup) {\n        this.diceCup.visible = false;\n      }\n      if (this.dices) {\n        this.dices.forEach(dice => {\n          dice.visible = false;\n        });\n      }\n    },\n\n    selectDiceCount(count) {\n      this.diceCount = count;\n      this.showOptions = false;\n      // 重新创建骰子\n      if (this.dices.length > 0) {\n        this.dices.forEach(dice => {\n          if (dice && this.scene) {\n            this.scene.remove(dice);\n          }\n        });\n        this.dices = [];\n      }\n      this.createDices();\n      \n      // 显示骰蛊和新创建的骰子\n      if (this.diceCup) {\n        this.diceCup.visible = true;\n      }\n      if (this.dices) {\n        this.dices.forEach(dice => {\n          dice.visible = true;\n        });\n      }\n    },\n\n    initScene() {\n      return new Promise((resolve, reject) => {\n        try {\n          const query = uni.createSelectorQuery().in(this);\n          query.select('#webgl').boundingClientRect(data => {\n            const { width, height } = data;\n            \n            this.scene = markRaw(new this.THREE.Scene());\n            \n            this.camera = markRaw(new this.THREE.PerspectiveCamera(\n              45,\n              width / height,\n              0.1,\n              1000\n            ));\n            \n            // 恢复到最初能正常工作的相机位置\n            this.camera.position.set(0, 0, 8);    // 恢复原始位置\n            this.camera.lookAt(0, 0, 0);          // 恢复原始观察点\n            \n            const ambientLight = new this.THREE.AmbientLight(0xffffff, 0.6);\n            this.scene.add(ambientLight);\n            \n            const directionalLight = new this.THREE.DirectionalLight(0xffffff, 0.6);\n            directionalLight.position.set(2, 4, 1);\n            this.scene.add(directionalLight);\n            \n            this.initRenderer(width, height);\n            \n            resolve();\n          }).exec();\n        } catch (error) {\n          reject(error);\n        }\n      });\n    },\n\n    goBack() {\n      uni.navigateBack();\n    },\n  }\n}\n</script>\n\n<style>\n/* 页面容器 */\n.page-container {\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(to bottom, #0D0D2B 0%, #1A1A3A 100%);\n  position: relative;\n  overflow: hidden;\n}\n\n/* 背景动画效果 */\n.page-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: radial-gradient(circle at center, transparent 0%, #0D0D2B 70%);\n  animation: pulse 4s ease-in-out infinite;\n  z-index: 0;\n}\n\n@keyframes pulse {\n  0% { opacity: 0.5; }\n  50% { opacity: 0.8; }\n  100% { opacity: 0.5; }\n}\n\n.game-header {\n  text-align: center;\n  margin-bottom: 40rpx;\n  position: relative;\n  z-index: 1;\n  padding-top: 80rpx;  /* 调整顶部间距，原来是120rpx */\n}\n\n.title {\n  font-size: 48rpx;\n  margin-bottom: 10rpx;\n  font-weight: bold;\n}\n\n.neon-text {\n  color: #fff;\n  text-shadow: 0 0 5px #fff,\n               0 0 10px #fff,\n               0 0 20px #ff00de,\n               0 0 30px #ff00de,\n               0 0 40px #ff00de;\n  animation: neon 1.5s ease-in-out infinite alternate;\n}\n\n.subtitle {\n  font-size: 28rpx;\n  color: #00f7ff;\n  margin-top: 10rpx;\n}\n\n.glow-text {\n  color: #00f7ff;\n  text-shadow: 0 0 10px #00f7ff;\n}\n\n.game-container {\n  width: 100%;\n  height: calc(100vh - 200rpx);\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  z-index: 1;\n}\n\n.canvas-container {\n  width: 100%;\n  height: 75vh;\n  position: relative;\n  border-radius: 20rpx;\n  box-shadow: 0 0 20px #ff00de,\n              0 0 40px #ff00de,\n              inset 0 0 20px #ff00de;\n  opacity: 1;\n  transition: opacity 0.3s ease;\n}\n\n.dice-canvas {\n  width: 100%;\n  height: 100%;\n  display: block;\n  background: transparent;\n}\n\n/* 按钮容器 */\n.button-container {\n  margin-top: 40rpx;\n  display: flex;\n  justify-content: center;\n  gap: 20rpx;\n}\n\n.neon-button {\n  background: transparent;\n  border: 2px solid #00f7ff;\n  color: #00f7ff;\n  padding: 20rpx 60rpx;\n  font-size: 32rpx;\n  border-radius: 50rpx;\n  text-transform: uppercase;\n  font-weight: bold;\n  box-shadow: 0 0 10px #00f7ff,\n              inset 0 0 10px #00f7ff;\n  transition: all 0.3s ease;\n}\n\n.neon-button:active {\n  transform: scale(0.95);\n  box-shadow: 0 0 20px #00f7ff,\n              inset 0 0 20px #00f7ff;\n}\n\n/* 弹窗层 */\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(13, 13, 43, 0.95);\n  backdrop-filter: blur(10px);\n  z-index: 99999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  animation: modalFadeIn 0.3s ease;\n}\n\n@keyframes modalFadeIn {\n  from {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.modal-content {\n  background: rgba(26, 26, 58, 0.95);\n  border-radius: 30rpx;\n  padding: 60rpx 40rpx;\n  width: 85%;\n  max-width: 600rpx;\n  border: 2px solid #ff00de;\n  box-shadow: 0 0 30px rgba(255, 0, 222, 0.3),\n              inset 0 0 20px rgba(255, 0, 222, 0.2);\n  animation: contentSlideUp 0.3s ease;\n  transform: translateZ(0);\n}\n\n@keyframes contentSlideUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.modal-title {\n  text-align: center;\n  margin-bottom: 50rpx;\n  font-size: 36rpx;\n  font-weight: bold;\n  letter-spacing: 2px;\n}\n\n.modal-options-container {\n  display: flex;\n  flex-direction: column;\n  gap: 40rpx; /* 两行之间的间距 */\n  margin-top: 20rpx;\n}\n\n.options-row {\n  display: flex;\n  justify-content: center;\n  gap: 60rpx; /* 同一行选项之间的间距 */\n}\n\n.modal-option {\n  width: 100rpx;\n  height: 100rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid #00f7ff;\n  border-radius: 50%;\n  color: #00f7ff;\n  font-size: 36rpx;\n  font-weight: bold;\n  background: rgba(0, 247, 255, 0.1);\n  box-shadow: 0 0 15px rgba(0, 247, 255, 0.3);\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n}\n\n.neon-text-small {\n  font-size: 28rpx;\n  color: #00f7ff;\n  text-shadow: 0 0 5px #00f7ff,\n               0 0 10px #00f7ff;\n}\n\n/* 添加隐藏类 */\n.hidden {\n  opacity: 0;\n  pointer-events: none;\n  transition: opacity 0.3s ease;\n}\n</style>","import MiniProgramPage from '/Users/weitao/Desktop/ThinGift/drink-app/pages/game/dice.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","markRaw","createScopedThreejs","texture"],"mappings":"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"}