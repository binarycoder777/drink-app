{"version":3,"file":"lucky-wheel.js","sources":["pages/game/lucky-wheel.vue","pages/game/lucky-wheel.vue?type=page"],"sourcesContent":["<template>\n    <view class=\"lucky-wheel-container\">\n        <!-- Header Section -->\n        <view class=\"game-header\">\n            <text class=\"title neon-text\">幸运转盘</text>\n            <text class=\"subtitle glow-text\">今晚 你就是主角</text>\n        </view>\n\n        <!-- Wheel Section -->\n        <view class=\"wheel-section\">\n            <view class=\"wheel-container glow-effect\">\n                <canvas \n                    id=\"wheelCanvas\" \n                    class=\"wheel-canvas\"\n                    style=\"width: 300px; height: 300px;\"\n                    canvas-id=\"wheelCanvas\"\n                    type=\"2d\"\n                    v-show=\"!showSettingsModal\">\n                </canvas>\n            </view>\n            \n            <!-- Control Button -->\n            <view class=\"control-section\">\n                <button \n                    class=\"spin-button neon-button\" \n                    @tap=\"startSpin\" \n                    :disabled=\"isSpinning || !ctx\"\n                    :class=\"{'spinning': isSpinning}\">\n                    {{ isSpinning ? 'HIGH起来...' : (ctx ? '开始狂欢' : '初始化中...') }}\n                </button>\n                <button \n                    class=\"settings-button neon-button-secondary\" \n                    @tap=\"showSettings\">\n                    设置\n                </button>\n            </view>\n        </view>\n\n        <!-- History Section -->\n        <view class=\"history-section\" v-if=\"spinHistory.length > 0\">\n            <text class=\"history-title neon-text-small\">派对记录</text>\n            <view class=\"history-list\">\n                <view class=\"history-item glow-text\" \n                      v-for=\"(item, index) in spinHistory\" \n                      :key=\"index\">\n                    {{ item }}\n                </view>\n            </view>\n        </view>\n\n        <!-- Settings Modal -->\n        <view class=\"modal\" v-if=\"showSettingsModal\">\n            <view class=\"modal-content\">\n                <text class=\"modal-title neon-text-small\">游戏设置</text>\n                <view class=\"prize-list\">\n                    <view class=\"prize-item\" v-for=\"(prize, index) in editablePrizes\" :key=\"index\">\n                        <input \n                            type=\"text\" \n                            v-model=\"editablePrizes[index]\" \n                            class=\"prize-input\"\n                            :placeholder=\"'奖项 ' + (index + 1)\"\n                        />\n                        <text class=\"delete-btn\" @tap=\"deletePrize(index)\" v-if=\"editablePrizes.length > 4\">×</text>\n                    </view>\n                    <button class=\"add-btn neon-button-small\" @tap=\"addPrize\" v-if=\"editablePrizes.length < 12\">\n                        添加选项\n                    </button>\n                </view>\n                <view class=\"modal-buttons\">\n                    <button class=\"neon-button-small\" @tap=\"saveSettings\">保存</button>\n                    <button class=\"neon-button-small cancel\" @tap=\"cancelSettings\">取消</button>\n                </view>\n            </view>\n        </view>\n    </view>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            isSpinning: false,\n            wheelRotation: 0,\n            spinHistory: [],\n            prizes: [\n                '喝一杯', '喝两杯', '指定一人', '大家喝',\n                '讲个笑话', '真心话', '大冒险', '下局请客'\n            ],\n            ctx: null,\n            sectorOffset: 0,\n            lastRotation: 0, // 记录上一次的旋转角度\n            showSettingsModal: false,\n            editablePrizes: [], // 用于编辑的临时数组\n        }\n    },\n    \n    created() {\n        this.sectorOffset = (360 / this.prizes.length) / 2\n    },\n    \n    onReady() {\n        console.log('Component ready, attempting to initialize canvas...')\n        setTimeout(() => {\n            this.initCanvas()\n        }, 100)\n    },\n    \n    methods: {\n        initCanvas() {\n            console.log('Initializing canvas...')\n            const query = uni.createSelectorQuery()\n            \n            // #ifdef MP-WEIXIN\n            query.select('#wheelCanvas')\n                .fields({ node: true, size: true })\n                .exec((res) => {\n                    console.log('MP Canvas query result:', res)\n                    if (res[0]) {\n                        const canvas = res[0].node\n                        this.ctx = canvas.getContext('2d')\n                        const dpr = uni.getSystemInfoSync().pixelRatio\n                        canvas.width = res[0].width * dpr\n                        canvas.height = res[0].height * dpr\n                        this.ctx.scale(dpr, dpr)\n                        console.log('MP Canvas context obtained')\n                        this.render()\n                    } else {\n                        console.error('Failed to get canvas node')\n                    }\n                })\n            // #endif\n            \n            // #ifdef H5\n            query.select('#wheelCanvas')\n                .context((res) => {\n                    console.log('H5 Canvas context result:', res)\n                    if (res && res.context) {\n                        this.ctx = res.context\n                        console.log('H5 Canvas context obtained')\n                        this.render()\n                    } else {\n                        console.error('Failed to get canvas context')\n                    }\n                })\n                .exec()\n            // #endif\n        },\n        \n        render() {\n            if (!this.ctx) return\n            \n            const renderFrame = () => {\n                this.ctx.clearRect(0, 0, 300, 300)\n                this.drawWheel()\n                this.drawPointer()\n            }\n            \n            // #ifdef H5\n            requestAnimationFrame(renderFrame)\n            // #endif\n            \n            // #ifdef MP-WEIXIN\n            renderFrame()\n            // #endif\n        },\n        \n        drawWheel() {\n            if (!this.ctx) {\n                console.error('Canvas context not available')\n                return\n            }\n            \n            const ctx = this.ctx\n            const centerX = 150\n            const centerY = 150\n            const radius = 140\n            \n            // 清空画布\n            ctx.clearRect(0, 0, 300, 300)\n            \n            // 绘制外发光效果\n            const outerGlow = ctx.createRadialGradient(\n                centerX, centerY, radius - 10,\n                centerX, centerY, radius + 10\n            )\n            outerGlow.addColorStop(0, 'rgba(255, 0, 222, 0.5)')\n            outerGlow.addColorStop(1, 'rgba(255, 0, 222, 0)')\n            \n            ctx.fillStyle = outerGlow\n            ctx.fillRect(0, 0, 300, 300)\n            \n            // 绘制转盘背景\n            const bgGradient = ctx.createRadialGradient(\n                centerX, centerY, 0,\n                centerX, centerY, radius\n            )\n            bgGradient.addColorStop(0, '#2B0B3A')\n            bgGradient.addColorStop(1, '#1A0B2E')\n            \n            ctx.beginPath()\n            ctx.arc(centerX, centerY, radius, 0, Math.PI * 2)\n            ctx.fillStyle = bgGradient\n            ctx.fill()\n            \n            // 绘制外圈霓虹效果\n            ctx.beginPath()\n            ctx.arc(centerX, centerY, radius, 0, Math.PI * 2)\n            ctx.strokeStyle = '#ff00de'\n            ctx.lineWidth = 3\n            ctx.shadowColor = '#ff00de'\n            ctx.shadowBlur = 15\n            ctx.stroke()\n            \n            // 绘制扇形\n            this.prizes.forEach((prize, index) => {\n                const startAngle = (index * 2 * Math.PI) / this.prizes.length\n                const endAngle = ((index + 1) * 2 * Math.PI) / this.prizes.length\n                \n                // 扇形渐变\n                const sectorGradient = ctx.createRadialGradient(\n                    centerX, centerY, 0,\n                    centerX, centerY, radius\n                )\n                if (index % 2 === 0) {\n                    sectorGradient.addColorStop(0, 'rgba(255, 0, 222, 0.2)')\n                    sectorGradient.addColorStop(1, 'rgba(255, 0, 222, 0.6)')\n                } else {\n                    sectorGradient.addColorStop(0, 'rgba(0, 247, 255, 0.2)')\n                    sectorGradient.addColorStop(1, 'rgba(0, 247, 255, 0.6)')\n                }\n                \n                ctx.beginPath()\n                ctx.moveTo(centerX, centerY)\n                ctx.arc(centerX, centerY, radius - 5, startAngle, endAngle)\n                ctx.fillStyle = sectorGradient\n                ctx.fill()\n                \n                // 扇形分隔线\n                ctx.beginPath()\n                ctx.moveTo(centerX, centerY)\n                ctx.lineTo(\n                    centerX + Math.cos(startAngle) * radius,\n                    centerY + Math.sin(startAngle) * radius\n                )\n                ctx.strokeStyle = index % 2 === 0 ? '#ff00de' : '#00f7ff'\n                ctx.lineWidth = 2\n                ctx.shadowColor = index % 2 === 0 ? '#ff00de' : '#00f7ff'\n                ctx.shadowBlur = 10\n                ctx.stroke()\n                \n                // 文字\n                ctx.save()\n                ctx.translate(centerX, centerY)\n                ctx.rotate(startAngle + (Math.PI / this.prizes.length))\n                \n                // 文字发光效果\n                ctx.fillStyle = '#FFFFFF'\n                ctx.font = 'bold 16px sans-serif'\n                ctx.textAlign = 'center'\n                ctx.shadowColor = index % 2 === 0 ? '#ff00de' : '#00f7ff'\n                ctx.shadowBlur = 15\n                ctx.fillText(prize, radius * 0.65, 0)\n                \n                ctx.restore()\n            })\n        },\n        \n        drawPointer() {\n            if (!this.ctx) return\n            \n            const ctx = this.ctx\n            const centerX = 150\n            const centerY = 150\n            \n            ctx.save()\n            ctx.translate(centerX, centerY)\n            ctx.rotate((this.wheelRotation * Math.PI) / 180)\n            \n            // 指针发光效果\n            ctx.shadowColor = '#00f7ff'\n            ctx.shadowBlur = 20\n            \n            // 绘制指针主体，使用更优雅的形状\n            const pointerGradient = ctx.createLinearGradient(0, 0, 70, 0)\n            pointerGradient.addColorStop(0, 'rgba(0, 247, 255, 1)')\n            pointerGradient.addColorStop(0.7, 'rgba(0, 247, 255, 0.8)')\n            pointerGradient.addColorStop(1, 'rgba(0, 247, 255, 0.6)')\n            \n            // 绘制一个更细长的指针\n            ctx.beginPath()\n            ctx.moveTo(0, 0)\n            ctx.lineTo(75, 0)\n            ctx.lineWidth = 3\n            ctx.strokeStyle = pointerGradient\n            ctx.stroke()\n            \n            // 绘制一个更优雅的指针头\n            ctx.beginPath()\n            ctx.moveTo(75, 0)\n            ctx.lineTo(65, -6)\n            ctx.lineTo(70, 0)\n            ctx.lineTo(65, 6)\n            ctx.closePath()\n            ctx.fillStyle = '#00f7ff'\n            ctx.fill()\n            \n            // 绘制中心装饰\n            // 外圈光环\n            ctx.beginPath()\n            ctx.arc(0, 0, 12, 0, Math.PI * 2)\n            ctx.strokeStyle = '#ff00de'\n            ctx.lineWidth = 2\n            ctx.shadowColor = '#ff00de'\n            ctx.shadowBlur = 15\n            ctx.stroke()\n            \n            // 内圈实心\n            const centerGradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 10)\n            centerGradient.addColorStop(0, '#ff00de')\n            centerGradient.addColorStop(1, '#ff69b4')\n            \n            ctx.beginPath()\n            ctx.arc(0, 0, 10, 0, Math.PI * 2)\n            ctx.fillStyle = centerGradient\n            ctx.fill()\n            \n            ctx.restore()\n        },\n        \n        startSpin() {\n            if (this.isSpinning || !this.ctx) return\n            \n            this.isSpinning = true\n            const baseSpins = 5\n            const randomSpins = Math.floor(Math.random() * 3) + 3\n            const randomPrize = Math.floor(Math.random() * this.prizes.length)\n            \n            // 确保从当前角度继续顺时针旋转\n            const currentRotation = this.wheelRotation % 360\n            const targetSector = (360 / this.prizes.length) * randomPrize + this.sectorOffset\n            let additionalRotation = 0\n            \n            // 计算需要额外旋转的角度，确保总是顺时针到达目标\n            if (targetSector <= currentRotation) {\n                additionalRotation = 360 - (currentRotation - targetSector)\n            } else {\n                additionalRotation = targetSector - currentRotation\n            }\n            \n            // 计算总旋转角度\n            const totalRotation = this.wheelRotation + // 当前累积角度\n                                (baseSpins + randomSpins) * 360 + // 基础旋转\n                                additionalRotation // 到达目标需要的额外角度\n            \n            const duration = 6000\n            const start = Date.now()\n            const startRotation = this.wheelRotation\n            const rotationDiff = totalRotation - startRotation\n            \n            const animate = () => {\n                const now = Date.now()\n                const timePassed = now - start\n                \n                if (timePassed >= duration) {\n                    this.isSpinning = false\n                    this.wheelRotation = totalRotation\n                    this.lastRotation = totalRotation\n                    this.spinHistory.unshift(this.prizes[randomPrize])\n                    if (this.spinHistory.length > 5) this.spinHistory.pop()\n                    \n                    this.render()\n                    \n                    setTimeout(() => {\n                        uni.showToast({\n                            title: `🎉 ${this.prizes[randomPrize]} 🎉`,\n                            icon: 'none',\n                            duration: 2000\n                        })\n                    }, 500)\n                    return\n                }\n                \n                // 优化缓动效果\n                const progress = timePassed / duration\n                let easeOut\n                \n                if (progress < 0.2) {\n                    // 开始加速更平滑\n                    easeOut = Math.pow(progress / 0.2, 2)\n                } else if (progress < 0.6) {\n                    // 中间匀速\n                    easeOut = progress\n                } else {\n                    // 结尾减速更平滑\n                    const p = (progress - 0.6) / 0.4\n                    easeOut = 0.6 + (0.4 * (1 - Math.pow(p, 2)))\n                }\n                \n                // 计算当前旋转角度\n                this.wheelRotation = startRotation + (rotationDiff * easeOut)\n                \n                this.render()\n                \n                // #ifdef H5\n                requestAnimationFrame(animate)\n                // #endif\n                \n                // #ifdef MP-WEIXIN\n                setTimeout(animate, 16)\n                // #endif\n            }\n            \n            animate()\n        },\n        \n        showSettings() {\n            this.editablePrizes = [...this.prizes]\n            this.showSettingsModal = true\n        },\n        \n        saveSettings() {\n            // 过滤空值并保存\n            this.prizes = this.editablePrizes.filter(prize => prize.trim() !== '')\n            this.showSettingsModal = false\n            // 重新渲染转盘\n            this.render()\n        },\n        \n        cancelSettings() {\n            this.showSettingsModal = false\n        },\n        \n        addPrize() {\n            if (this.editablePrizes.length < 12) {\n                this.editablePrizes.push('')\n            }\n        },\n        \n        deletePrize(index) {\n            if (this.editablePrizes.length > 4) {\n                this.editablePrizes.splice(index, 1)\n            }\n        }\n    }\n}\n</script>\n\n<style>\n.lucky-wheel-container {\n    padding: 30rpx;\n    min-height: 100vh;\n    background: linear-gradient(to bottom, #0D0D2B 0%, #1A1A3A 100%);\n    position: relative;\n    overflow: hidden;\n}\n\n/* 背景动画效果 */\n.lucky-wheel-container::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: radial-gradient(circle at center, transparent 0%, #0D0D2B 70%);\n    animation: pulse 4s ease-in-out infinite;\n    z-index: 0;\n}\n\n@keyframes pulse {\n    0% { opacity: 0.5; }\n    50% { opacity: 0.8; }\n    100% { opacity: 0.5; }\n}\n\n.game-header {\n    text-align: center;\n    margin-bottom: 40rpx;\n    position: relative;\n    z-index: 1;\n}\n\n.title {\n    font-size: 48rpx;\n    margin-bottom: 10rpx;\n    font-weight: bold;\n    text-transform: uppercase;\n}\n\n.neon-text {\n    color: #fff;\n    text-shadow: 0 0 5px #fff,\n                 0 0 10px #fff,\n                 0 0 20px #ff00de,\n                 0 0 30px #ff00de,\n                 0 0 40px #ff00de;\n    animation: neon 1.5s ease-in-out infinite alternate;\n}\n\n@keyframes neon {\n    from {\n        text-shadow: 0 0 5px #fff,\n                     0 0 10px #fff,\n                     0 0 20px #ff00de,\n                     0 0 30px #ff00de,\n                     0 0 40px #ff00de;\n    }\n    to {\n        text-shadow: 0 0 2px #fff,\n                     0 0 5px #fff,\n                     0 0 10px #ff00de,\n                     0 0 15px #ff00de,\n                     0 0 20px #ff00de;\n    }\n}\n\n.subtitle {\n    font-size: 28rpx;\n    color: #00f7ff;\n    margin-top: 10rpx;\n}\n\n.glow-text {\n    color: #00f7ff;\n    text-shadow: 0 0 10px #00f7ff;\n}\n\n.wheel-section {\n    position: relative;\n    z-index: 1;\n}\n\n.wheel-container {\n    position: relative;\n    width: 300px;\n    height: 300px;\n    margin: 40rpx auto;\n    border-radius: 50%;\n    box-shadow: 0 0 20px #ff00de,\n                0 0 40px #ff00de,\n                inset 0 0 20px #ff00de;\n    z-index: 1;\n}\n\n.wheel-canvas {\n    width: 300px !important;\n    height: 300px !important;\n    transition: transform 0.1s linear;\n    position: relative;\n    z-index: 1;\n    visibility: visible; /* 默认可见 */\n}\n\n/* 当设置弹窗显示时，确保 canvas 隐藏 */\n.wheel-canvas.hidden {\n    visibility: hidden;\n}\n\n.control-section {\n    margin-top: 20rpx;\n    display: flex;\n    justify-content: center;\n    gap: 2rpx;\n}\n\n.spin-button {\n    background: transparent;\n    border: 2px solid #00f7ff;\n    color: #00f7ff;\n    padding: 20rpx 60rpx;\n    font-size: 32rpx;\n    border-radius: 50rpx;\n    text-transform: uppercase;\n    font-weight: bold;\n    box-shadow: 0 0 10px #00f7ff,\n                inset 0 0 10px #00f7ff;\n    transition: all 0.3s ease;\n    min-width: 350rpx;\n}\n\n.neon-button:active {\n    transform: scale(0.95);\n    box-shadow: 0 0 20px #00f7ff,\n                inset 0 0 20px #00f7ff;\n}\n\n.spinning {\n    animation: buttonGlow 0.5s ease-in-out infinite alternate;\n}\n\n@keyframes buttonGlow {\n    from {\n        box-shadow: 0 0 10px #00f7ff,\n                    inset 0 0 10px #00f7ff;\n    }\n    to {\n        box-shadow: 0 0 20px #00f7ff,\n                    inset 0 0 20px #00f7ff;\n    }\n}\n\n.settings-button {\n    background: transparent;\n    border: 2px solid #ff00de;\n    color: #ff00de;\n    padding: 20rpx 40rpx;\n    font-size: 28rpx;\n    border-radius: 50rpx;\n    font-weight: bold;\n    box-shadow: 0 0 10px #ff00de,\n                inset 0 0 10px #ff00de;\n    min-width: 300rpx;\n}\n\n.history-section {\n    margin-top: 60rpx;\n    padding: 30rpx;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 20rpx;\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    position: relative;\n    z-index: 1;\n}\n\n.neon-text-small {\n    font-size: 28rpx;\n    color: #00f7ff;\n    text-shadow: 0 0 5px #00f7ff,\n                 0 0 10px #00f7ff;\n}\n\n.history-list {\n    margin-top: 20rpx;\n}\n\n.history-item {\n    padding: 10rpx 0;\n    border-bottom: 1px solid rgba(0, 247, 255, 0.3);\n    font-size: 24rpx;\n    transition: all 0.3s ease;\n}\n\n.history-item:hover {\n    background: rgba(0, 247, 255, 0.1);\n}\n\n/* 添加结果展示动画 */\n.history-item:first-child {\n    animation: newResult 0.5s ease-in-out;\n}\n\n@keyframes newResult {\n    from {\n        transform: scale(1.1);\n        background: rgba(0, 247, 255, 0.3);\n    }\n    to {\n        transform: scale(1);\n        background: transparent;\n    }\n}\n\n.modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.8);\n    backdrop-filter: blur(5px);\n    z-index: 99999;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.modal-content {\n    background: rgba(26, 11, 46, 0.95);\n    border-radius: 20rpx;\n    padding: 40rpx;\n    width: 80%;\n    max-width: 600rpx;\n    border: 2px solid #ff00de;\n    box-shadow: 0 0 20px #ff00de;\n    position: relative;\n    z-index: 100000;\n}\n\n.modal-title {\n    text-align: center;\n    margin-bottom: 30rpx;\n}\n\n.prize-list {\n    margin: 20rpx 0;\n}\n\n.prize-item {\n    display: flex;\n    align-items: center;\n    margin-bottom: 20rpx;\n}\n\n.prize-input {\n    flex: 1;\n    background: rgba(255, 255, 255, 0.1);\n    border: 1px solid #ff00de;\n    border-radius: 10rpx;\n    padding: 10rpx 20rpx;\n    color: #fff;\n    margin-right: 10rpx;\n}\n\n.delete-btn {\n    color: #ff00de;\n    font-size: 40rpx;\n    padding: 0 20rpx;\n}\n\n.modal-buttons {\n    display: flex;\n    justify-content: center;\n    gap: 20rpx;\n    margin-top: 30rpx;\n}\n\n.neon-button-small {\n    background: transparent;\n    border: 1px solid #00f7ff;\n    color: #00f7ff;\n    padding: 10rpx 30rpx;\n    font-size: 28rpx;\n    border-radius: 30rpx;\n    box-shadow: 0 0 5px #00f7ff;\n}\n\n.neon-button-small.cancel {\n    border-color: #ff00de;\n    color: #ff00de;\n    box-shadow: 0 0 5px #ff00de;\n}\n\n.add-btn {\n    width: 100%;\n    margin-top: 20rpx;\n}\n</style> ","import MiniProgramPage from '/Users/weitao/Desktop/ThinGift/drink-app/pages/game/lucky-wheel.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}