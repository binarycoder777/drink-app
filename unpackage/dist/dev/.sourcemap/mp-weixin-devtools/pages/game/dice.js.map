{"version":3,"names":["_sfc_main","setup","diceCount","common_vendor","ref","showOptions","data","THREE","scene","camera","renderer","diceCup","isDragging","previousTouch","canvasWidth","canvasHeight","canvas","startTouch","startRotation","isShaking","diceTextures","dices","textureLoader","decorativeLines","pointLight1","pointLight2","woodTexture","mounted","_this","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","sysInfo","query","gl","wrap","_callee$","_context","prev","next","Promise","resolve","setTimeout","index","getSystemInfoSync","windowWidth","windowHeight","createSelectorQuery","in","reject","select","node","exec","res","Error","sent","markRaw","getContext","alpha","antialias","premultipliedAlpha","preserveDrawingBuffer","__f__","getContextAttributes","width","height","style","initThreeJS","loadTextures","createDiceCup","createDices","animate","t0","stop","methods","_this2","pixelRatio","threejsMiniprogram","createScopedThreejs","Scene","background","children","length","ambientLight","AmbientLight","add","mainLight","DirectionalLight","position","set","PerspectiveCamera","distance","angleInRadians","Math","PI","cos","sin","lookAt","WebGLRenderer","context","setPixelRatio","setSize","setClearColor","setClearAlpha","clearColor","clear","COLOR_BUFFER_BIT","error","material","MeshPhongMaterial","color","transparent","side","DoubleSide","shininess","specular","flatShading","topRadius","bottomRadius","segments","bodyGeometry","CylinderGeometry","lidGeometry","CircleGeometry","body","Mesh","lid","y","rotation","x","Group","z","userData","pivotPoint","_this3","time","Date","now","radius","forEach","child","originalX","originalZ","render","requestAnimationFrame","onTouchStart","e","touches","onTouchMove","touch","deltaY","pageY","progress","min","max","maxRotation","angle","offsetY","zOffset","dice","onTouchEnd","animateClose","_this4","startPosY","startRotX","closeAnimation","t","pow","newPosY","remainingProgress","_this5","_callee2","_loop","i","_callee2$","_context3","TextureLoader","load","texture","wrapS","RepeatWrapping","wrapT","repeat","_loop$","_context2","concat","texture2","push","delegateYield","t1","_this6","materials","map","MeshBasicMaterial","opacity","depthWrite","depthTest","diceSize","geometry","BoxGeometry","computeBoundingBox","positions","calculateDicePositions","baseY","pos","random","originalY","count","spacing","maxRadius","innerCount","floor","outerCount","innerRadius","outerRadius","randomizeDice","j","_ref","face","shakeDiceCup","_this7","startTime","duration","amplitude","frequency","shakeAnimation","elapsed","decay","offset","newX","newZ","distanceFromCenter","sqrt","atan2","showDiceOptions","visible","selectDiceCount","_this8","remove","initScene","_this9","boundingClientRect","directionalLight","initRenderer","goBack","navigateBack","wx","createPage","MiniProgramPage"],"sources":["dice.vue","dice.vue?type=page"],"sourcesContent":["<template>\n  <!-- 将整个页面包装在一个相对定位的容器中 -->\n  <view class=\"page-container\">\n    <!-- 添加标题区域 -->\n    <view class=\"game-header\">\n      <text class=\"title neon-text\">骰子游戏</text>\n      <text class=\"subtitle glow-text\">今晚 就看你的了</text>\n    </view>\n    \n    <view class=\"game-container\">\n      <!-- 骰蛊区域 -->\n      <view class=\"canvas-container glow-effect\" :class=\"{ 'hidden': showOptions }\">\n        <canvas \n          type=\"webgl\" \n          id=\"dice-container\"\n          class=\"dice-canvas\"\n          @touchstart=\"onTouchStart\"\n          @touchmove=\"onTouchMove\"\n          @touchend=\"onTouchEnd\"\n        ></canvas>\n      </view>\n      \n      <!-- 按钮区域 -->\n      <view class=\"button-container\">\n        <view class=\"dice-count-selector neon-button\" @tap=\"showDiceOptions\">\n          <text>{{ diceCount }}个骰子</text>\n        </view>\n        <view class=\"shake-button neon-button\" @tap=\"shakeDiceCup\">摇骰子</view>\n      </view>\n      \n      <!-- 弹窗层 -->\n      <view \n        class=\"modal\"\n        v-if=\"showOptions\"\n      >\n        <view class=\"modal-content\">\n          <text class=\"modal-title neon-text\">选择骰子数量</text>\n          <view class=\"modal-options-container\">\n            <view class=\"options-row\">\n              <view \n                v-for=\"n in 3\" \n                :key=\"n\" \n                class=\"modal-option\"\n                :class=\"{ 'active': diceCount === n }\"\n                @tap=\"selectDiceCount(n)\"\n              >\n                {{ n }}\n              </view>\n            </view>\n            <view class=\"options-row\">\n              <view \n                v-for=\"n in 3\" \n                :key=\"n + 3\" \n                class=\"modal-option\"\n                :class=\"{ 'active': diceCount === (n + 3) }\"\n                @tap=\"selectDiceCount(n + 3)\"\n              >\n                {{ n + 3 }}\n              </view>\n            </view>\n          </view>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nimport { createScopedThreejs } from 'threejs-miniprogram';\nimport { markRaw, ref } from 'vue';\n\nexport default {\n  setup() {\n    const diceCount = ref(3);\n    const showOptions = ref(false);\n    \n    return {\n      diceCount,\n      showOptions\n    }\n  },\n  data() {\n    return {\n      THREE: null,\n      scene: null,\n      camera: null,\n      renderer: null,\n      diceCup: null,\n      isDragging: false,\n      previousTouch: null,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      canvas: null,\n      startTouch: null,\n      startRotation: null,\n      isShaking: false,\n      diceTextures: [],\n      dices: [],\n      textureLoader: null,\n      decorativeLines: [],\n      pointLight1: null,\n      pointLight2: null,\n      woodTexture: null,\n    }\n  },\n  async mounted() {\n    try {\n      // 增加延迟确保 canvas 节点已经准备好\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const sysInfo = uni.getSystemInfoSync();\n      this.canvasWidth = sysInfo.windowWidth;\n      this.canvasHeight = sysInfo.windowHeight;\n      \n      // 确保在初始化 Three.js 之前获取到 canvas 上下文\n      const query = uni.createSelectorQuery().in(this);\n      const canvas = await new Promise((resolve, reject) => {\n        query.select('#dice-container')\n          .node()\n          .exec((res) => {\n            if (res[0] && res[0].node) {\n              resolve(res[0].node);\n            } else {\n              reject(new Error('Canvas element not found'));\n            }\n          });\n      });\n      \n      this.canvas = markRaw(canvas);\n      const gl = canvas.getContext('webgl', {\n        alpha: true,\n        antialias: true,\n        premultipliedAlpha: false,\n        preserveDrawingBuffer: false\n      });\n      if (!gl) {\n        throw new Error('WebGL context not available');\n      }\n      \n      // 添加调试输出\n      console.log('WebGL Context Attributes:', gl.getContextAttributes());\n      console.log('Canvas:', {\n        width: canvas.width,\n        height: canvas.height,\n        style: canvas.style\n      });\n      \n      await this.initThreeJS();\n      await this.loadTextures();\n      this.createDiceCup();\n      this.createDices();\n      this.animate();\n    } catch (error) {\n      console.error('Initialization error:', error);\n    }\n  },\n  methods: {\n    initThreeJS() {\n      return new Promise((resolve, reject) => {\n        const query = uni.createSelectorQuery().in(this);\n        query.select('#dice-container')\n          .node()\n          .exec((res) => {\n            if (!res[0] || !res[0].node) {\n              reject(new Error('Canvas element not found'));\n              return;\n            }\n\n            const canvas = markRaw(res[0].node);\n            this.canvas = canvas;\n            \n            // 获取系统信息来设置像素比\n            const sysInfo = uni.getSystemInfoSync();\n            const pixelRatio = sysInfo.pixelRatio || 1;\n            \n            this.canvasHeight = this.canvasHeight * 0.75;\n            canvas.width = this.canvasWidth * pixelRatio;  // 考虑像素比\n            canvas.height = this.canvasHeight * pixelRatio; // 考虑像素比\n\n            const gl = canvas.getContext('webgl', {\n              alpha: true,\n              antialias: true,\n              premultipliedAlpha: false,\n              preserveDrawingBuffer: false\n            });\n\n            // 添加调试输出\n            console.log('WebGL Context Attributes:', gl.getContextAttributes());\n            console.log('Canvas:', {\n              width: canvas.width,\n              height: canvas.height,\n              style: canvas.style\n            });\n\n            try {\n              this.THREE = markRaw(createScopedThreejs(canvas));\n              this.scene = markRaw(new this.THREE.Scene());\n              \n              // 添加调试输出\n              console.log('THREE.js Scene:', {\n                background: this.scene.background,\n                children: this.scene.children.length\n              });\n              \n              this.scene.background = null;\n              \n              // 简化光照，只使用一个环境光和一个主光源\n              const ambientLight = markRaw(new this.THREE.AmbientLight(0xffffff, 0.7));\n              this.scene.add(ambientLight);\n\n              // 主光源 - 从上方打光，角度与相机一致\n              const mainLight = markRaw(new this.THREE.DirectionalLight(0xffffff, 0.3));\n              mainLight.position.set(0, 8, 4);\n              this.scene.add(mainLight);\n\n              // 调整相机位置为从上往下看30度\n              this.camera = markRaw(new this.THREE.PerspectiveCamera(\n                45,             // 视角\n                this.canvasWidth / this.canvasHeight,\n                0.1,\n                1000\n              ));\n              \n              // 计算相机位置：从上往下看30度\n              const distance = 12;\n              const angleInRadians = Math.PI * 60 / 180;  // 使用60度，这样从上往下看就是30度\n              \n              this.camera.position.set(\n                0,                                    // x = 0 保持正对\n                distance * Math.cos(angleInRadians),  // y = 距离 * cos(60°)\n                distance * Math.sin(angleInRadians)   // z = 距离 * sin(60°)\n              );\n              \n              this.camera.lookAt(0, 0, 0);\n\n              this.renderer = markRaw(new this.THREE.WebGLRenderer({\n                canvas,\n                context: gl,\n                antialias: true,\n                alpha: true,\n                premultipliedAlpha: false,\n                preserveDrawingBuffer: false\n              }));\n              \n              // 使用系统像素比\n              this.renderer.setPixelRatio(pixelRatio);\n              this.renderer.setSize(this.canvasWidth, this.canvasHeight);\n              this.renderer.setClearColor(0x000000, 0);\n              this.renderer.setClearAlpha(0);\n              \n              gl.clearColor(0.0, 0.0, 0.0, 0.0);\n              gl.clear(gl.COLOR_BUFFER_BIT);\n              \n              resolve();\n            } catch (error) {\n              console.error('THREE.js initialization error:', error);\n              reject(error);\n            }\n          });\n      });\n    },\n\n    createDiceCup() {\n      const material = markRaw(new this.THREE.MeshPhongMaterial({\n        color: 0xB0E2FF,\n        transparent: false,\n        side: this.THREE.DoubleSide,\n        shininess: 0,        \n        specular: 0x000000,  \n        flatShading: false,  \n      }));\n      \n      // 修改骰蛊尺寸\n      const topRadius = 2.2;     // 稍微增大顶部半径\n      const bottomRadius = 2.8;  // 稍微增大底部半径\n      const height = 5;         // 增加高度 (原来是4)\n      const segments = 32;\n      \n      const bodyGeometry = markRaw(new this.THREE.CylinderGeometry(\n        topRadius,\n        bottomRadius,\n        height,\n        segments,\n        1,\n        true\n      ));\n      \n      // 更新顶部盖子尺寸\n      const lidGeometry = markRaw(new this.THREE.CircleGeometry(\n        topRadius,\n        segments\n      ));\n      \n      // 创建骰蛊主体和盖子\n      const body = markRaw(new this.THREE.Mesh(bodyGeometry, material));\n      const lid = markRaw(new this.THREE.Mesh(lidGeometry, material));\n      \n      // 将盖子放在正确的位置\n      lid.position.y = height/2;\n      lid.rotation.x = -Math.PI/2;\n      \n      // 创建一个组来包含主体和盖子\n      this.diceCup = markRaw(new this.THREE.Group());\n      this.diceCup.add(body);\n      this.diceCup.add(lid);\n      \n      // 修改：调整整体位置\n      this.diceCup.position.y = 0;  // 向上移动 (原来是-1)\n      this.diceCup.position.z = 0;\n      this.diceCup.rotation.x = 0;\n      \n      this.diceCup.userData = {\n        pivotPoint: {\n          y: 0,  // 更新 pivotPoint 的 y 值 (原来是-1)\n          z: 0\n        }\n      };\n      \n      this.scene.add(this.diceCup);\n    },\n\n    animate() {\n      const animate = () => {\n        if (this.renderer && this.scene && this.camera) {\n          // 更新光照位置，创造细微的光照变化\n          const time = Date.now() * 0.001;\n          const radius = 0.2;\n          if (this.scene.children) {\n            this.scene.children.forEach(child => {\n              if (child instanceof this.THREE.DirectionalLight) {\n                // 让光源位置轻微摆动\n                const originalX = child.position.x;\n                const originalZ = child.position.z;\n                child.position.x = originalX + Math.sin(time) * radius;\n                child.position.z = originalZ + Math.cos(time) * radius;\n              }\n            });\n          }\n          \n          this.renderer.render(this.scene, this.camera);\n        }\n        \n        if (this.canvas) {\n          this.canvas.requestAnimationFrame(animate);\n        }\n      };\n\n      if (this.canvas) {\n        this.canvas.requestAnimationFrame(animate);\n      }\n    },\n\n    onTouchStart(e) {\n      if (!this.diceCup || !this.diceCup.userData || !this.diceCup.userData.pivotPoint) {\n        // 确保 pivotPoint 存在\n        if (this.diceCup) {\n          this.diceCup.userData = {\n            pivotPoint: {\n              y: 0,\n              z: 0\n            }\n          };\n        }\n      }\n      \n      this.isDragging = true;\n      this.previousTouch = e.touches[0];\n      this.startTouch = e.touches[0];\n      \n      // 记录开始时的骰盅旋转状态\n      if (this.diceCup) {\n        this.startRotation = {\n          x: this.diceCup.rotation.x,\n          z: this.diceCup.rotation.z\n        };\n      }\n    },\n\n    onTouchMove(e) {\n      if (!this.isDragging || !this.previousTouch || !this.diceCup) return;\n      \n      const touch = e.touches[0];\n      const deltaY = this.startTouch.pageY - touch.pageY;\n      const progress = Math.min(Math.max(deltaY * 0.003, 0), 1);\n      const maxRotation = Math.PI/4;\n      this.diceCup.rotation.x = -Math.PI/12 - maxRotation * progress;\n      \n      const radius = 3.5;\n      const angle = maxRotation * progress;\n      const offsetY = radius * (1 - Math.cos(angle));\n      \n      this.diceCup.position.y = this.diceCup.userData.pivotPoint.y + offsetY;\n      \n      // 修改：增加骰子前移的距离\n      if (this.dices && this.dices.length > 0) {\n        const zOffset = progress * 2.5; // 增加到2.5个单位 (原来是1.5)\n        this.dices.forEach(dice => {\n          dice.position.z = dice.userData.originalZ + zOffset;\n        });\n      }\n      \n      this.previousTouch = touch;\n    },\n\n    onTouchEnd() {\n      if (this.diceCup) {\n        // 如果没有揭开足够角度，就回到原位\n        if (this.diceCup.rotation.x > -Math.PI/12 - Math.PI/4) {\n          this.animateClose();\n        }\n      }\n      \n      this.isDragging = false;\n      this.previousTouch = null;\n      this.startTouch = null;\n    },\n\n    animateClose() {\n      if (!this.diceCup || !this.diceCup.userData.pivotPoint) {\n        this.diceCup.userData.pivotPoint = {\n          y: 0,\n          z: 0\n        };\n      }\n\n      const startPosY = this.diceCup.position.y;\n      const startRotX = this.diceCup.rotation.x;\n      const pivotPoint = this.diceCup.userData.pivotPoint;\n      let progress = 0;\n      \n      const closeAnimation = () => {\n        progress += 0.08;\n        if (progress < 1) {\n          const t = 1 - Math.pow(1 - progress, 3);\n          \n          const newPosY = startPosY + (pivotPoint.y - startPosY) * t;\n          this.diceCup.position.y = newPosY;\n          this.diceCup.rotation.x = startRotX + (-Math.PI/12 - startRotX) * t;\n          \n          // 修改：使用相同的前移距离\n          if (this.dices && this.dices.length > 0) {\n            const remainingProgress = 1 - t;\n            this.dices.forEach(dice => {\n              const zOffset = remainingProgress * 2.5; // 与 onTouchMove 保持一致\n              dice.position.z = dice.userData.originalZ + zOffset;\n            });\n          }\n          \n          if (this.canvas) {\n            this.canvas.requestAnimationFrame(closeAnimation);\n          }\n        } else {\n          this.diceCup.position.y = pivotPoint.y;\n          this.diceCup.rotation.x = -Math.PI/12;\n          \n          // 添加：确保骰子完全回到原始位置\n          if (this.dices && this.dices.length > 0) {\n            this.dices.forEach(dice => {\n              dice.position.z = dice.userData.originalZ;\n            });\n          }\n        }\n      };\n      \n      if (this.canvas) {\n        this.canvas.requestAnimationFrame(closeAnimation);\n      }\n    },\n\n    async loadTextures() {\n      this.textureLoader = markRaw(new this.THREE.TextureLoader());\n      \n      try {\n        // 加载骰蛊纹理\n        const woodTexture = await new Promise((resolve) => {\n          this.textureLoader.load('/static/images/game1/tougu.png', (texture) => {\n            texture.wrapS = this.THREE.RepeatWrapping;\n            texture.wrapT = this.THREE.RepeatWrapping;\n            texture.repeat.set(1, 1);  // 可以根据需要调整重复次数\n            resolve(markRaw(texture));\n          });\n        });\n        this.woodTexture = woodTexture;\n\n        // 分别加载骰子纹理\n        this.diceTextures = [];\n        for (let i = 0; i < 6; i++) {\n          const texture = await new Promise((resolve) => {\n            this.textureLoader.load(`/static/images/game1/dice${i + 1}.png`, (texture) => {\n              resolve(markRaw(texture));\n            });\n          });\n          this.diceTextures.push(texture);\n        }\n      } catch (error) {\n        console.error('Error loading textures:', error);\n      }\n    },\n\n    createDices() {\n      const materials = this.diceTextures.map(texture => {\n        return markRaw(new this.THREE.MeshBasicMaterial({ \n          map: texture,\n          transparent: false,\n          opacity: 1,\n          depthWrite: true,\n          depthTest: true,\n        }));\n      });\n      \n      const diceSize = 0.6;\n      const geometry = markRaw(new this.THREE.BoxGeometry(diceSize, diceSize, diceSize));\n      geometry.computeBoundingBox();\n      \n      // 计算骰子分布位置\n      const positions = this.calculateDicePositions(this.diceCount, diceSize);\n      \n      this.dices = [];\n      const baseY = -2.5;\n\n      // 创建骰子并放置在计算好的位置上\n      for (let i = 0; i < this.diceCount; i++) {\n        const dice = markRaw(new this.THREE.Mesh(geometry, materials));\n        const pos = positions[i];\n        \n        dice.position.set(pos.x, baseY, pos.z);\n        dice.rotation.y = Math.random() * Math.PI * 2;\n        \n        // 保存原始位置\n        dice.userData = {\n          originalX: dice.position.x,\n          originalY: dice.position.y,\n          originalZ: dice.position.z\n        };\n        \n        this.dices.push(dice);\n        this.scene.add(dice);\n      }\n    },\n\n    calculateDicePositions(count, diceSize) {\n      const positions = [];\n      const spacing = diceSize * 1.2; // 在骰子之间留出20%的间距\n      const maxRadius = 2.0; // 最大分布半径\n      \n      if (count === 1) {\n        positions.push({ x: 0, z: 0 });\n      } else if (count <= 6) {\n        // 单圈分布\n        const radius = Math.min(maxRadius, spacing);\n        for (let i = 0; i < count; i++) {\n          const angle = (i / count) * Math.PI * 2;\n          positions.push({\n            x: Math.cos(angle) * radius,\n            z: Math.sin(angle) * radius\n          });\n        }\n      } else {\n        // 双圈分布\n        const innerCount = Math.floor(count / 2);\n        const outerCount = count - innerCount;\n        \n        // 内圈\n        const innerRadius = spacing;\n        for (let i = 0; i < innerCount; i++) {\n          const angle = (i / innerCount) * Math.PI * 2;\n          positions.push({\n            x: Math.cos(angle) * innerRadius,\n            z: Math.sin(angle) * innerRadius\n          });\n        }\n        \n        // 外圈\n        const outerRadius = spacing * 2;\n        for (let i = 0; i < outerCount; i++) {\n          const angle = (i / outerCount) * Math.PI * 2;\n          positions.push({\n            x: Math.cos(angle) * outerRadius,\n            z: Math.sin(angle) * outerRadius\n          });\n        }\n      }\n      \n      return positions;\n    },\n\n    randomizeDice() {\n      const baseY = -2.5;\n      const positions = this.calculateDicePositions(this.dices.length, 0.6);\n      \n      // 打乱位置数组\n      for (let i = positions.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [positions[i], positions[j]] = [positions[j], positions[i]];\n      }\n\n      // 重新分配骰子位置\n      for (let i = 0; i < this.dices.length; i++) {\n        const dice = this.dices[i];\n        const pos = positions[i];\n        \n        dice.position.set(pos.x, baseY, pos.z);\n        \n        // 随机选择要朝上的面（1-6）\n        const face = Math.floor(Math.random() * 6) + 1;\n        \n        // 重置旋转\n        dice.rotation.set(0, 0, 0);\n        \n        // 根据选择的面设置标准90度旋转\n        switch(face) {\n          case 1: // 1朝上\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n          case 2: // 2朝上\n            dice.rotation.x = Math.PI * 0.5;\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n          case 3: // 3朝上\n            dice.rotation.z = -Math.PI * 0.5;\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n          case 4: // 4朝上\n            dice.rotation.z = Math.PI * 0.5;\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n          case 5: // 5朝上\n            dice.rotation.x = -Math.PI * 0.5;\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n          case 6: // 6朝上\n            dice.rotation.x = Math.PI;\n            dice.rotation.y = Math.PI * 0.5 * Math.floor(Math.random() * 4);\n            break;\n        }\n        \n        // 更新原始位置\n        dice.userData.originalX = dice.position.x;\n        dice.userData.originalZ = dice.position.z;\n      }\n    },\n\n    shakeDiceCup() {\n      if (this.diceCup && !this.isShaking) {\n        this.isShaking = true;\n        let startTime = Date.now();\n        const duration = 1000;\n        const amplitude = 1.5;\n        const frequency = 8;\n        \n        const shakeAnimation = () => {\n          const elapsed = Date.now() - startTime;\n          const progress = elapsed / duration;\n          \n          if (progress < 1) {\n            // 使用衰减的正弦函数创建摇动效果\n            const decay = 1 - progress; // 随时间衰减\n            const offset = Math.sin(progress * Math.PI * frequency) * amplitude * decay;\n            \n            // 应用左右摇动\n            this.diceCup.position.x = offset;\n            \n            // 添加轻微的旋转效果\n            this.diceCup.rotation.z = -offset * 0.1;\n            \n            // 更新骰子位置\n            this.dices.forEach(dice => {\n              // 计算新位置\n              let newX = dice.userData.originalX + offset;\n              let newZ = dice.userData.originalZ;\n              \n              // 检查是否超出骰蛊底部范围\n              const distanceFromCenter = Math.sqrt(newX * newX + newZ * newZ);\n              if (distanceFromCenter > 2.4) {\n                // 如果超出范围，将位置调整到边界上\n                const angle = Math.atan2(newZ, newX);\n                newX = Math.cos(angle) * 2.4;\n                newZ = Math.sin(angle) * 2.4;\n              }\n              \n              dice.position.x = newX;\n              dice.position.z = newZ;\n              \n              // 添加轻微的旋转\n              dice.rotation.x += (Math.random() - 0.5) * 0.1;\n              dice.rotation.z += (Math.random() - 0.5) * 0.1;\n            });\n            \n            if (this.canvas) {\n              this.canvas.requestAnimationFrame(shakeAnimation);\n            }\n          } else {\n            // 动画结束，恢复原位\n            this.diceCup.position.x = 0;\n            this.diceCup.rotation.z = 0;\n            this.isShaking = false;\n            \n            // 重新随机化骰子位置\n            this.randomizeDice();\n          }\n        };\n        \n        if (this.canvas) {\n          this.canvas.requestAnimationFrame(shakeAnimation);\n        }\n      }\n    },\n\n    showDiceOptions() {\n      this.showOptions = true;\n      // 隐藏骰蛊和骰子\n      if (this.diceCup) {\n        this.diceCup.visible = false;\n      }\n      if (this.dices) {\n        this.dices.forEach(dice => {\n          dice.visible = false;\n        });\n      }\n    },\n\n    selectDiceCount(count) {\n      this.diceCount = count;\n      this.showOptions = false;\n      // 重新创建骰子\n      if (this.dices.length > 0) {\n        this.dices.forEach(dice => {\n          if (dice && this.scene) {\n            this.scene.remove(dice);\n          }\n        });\n        this.dices = [];\n      }\n      this.createDices();\n      \n      // 显示骰蛊和新创建的骰子\n      if (this.diceCup) {\n        this.diceCup.visible = true;\n      }\n      if (this.dices) {\n        this.dices.forEach(dice => {\n          dice.visible = true;\n        });\n      }\n    },\n\n    initScene() {\n      return new Promise((resolve, reject) => {\n        try {\n          const query = uni.createSelectorQuery().in(this);\n          query.select('#webgl').boundingClientRect(data => {\n            const { width, height } = data;\n            \n            this.scene = markRaw(new this.THREE.Scene());\n            \n            this.camera = markRaw(new this.THREE.PerspectiveCamera(\n              45,\n              width / height,\n              0.1,\n              1000\n            ));\n            \n            // 恢复到最初能正常工作的相机位置\n            this.camera.position.set(0, 0, 8);    // 恢复原始位置\n            this.camera.lookAt(0, 0, 0);          // 恢复原始观察点\n            \n            const ambientLight = new this.THREE.AmbientLight(0xffffff, 0.6);\n            this.scene.add(ambientLight);\n            \n            const directionalLight = new this.THREE.DirectionalLight(0xffffff, 0.6);\n            directionalLight.position.set(2, 4, 1);\n            this.scene.add(directionalLight);\n            \n            this.initRenderer(width, height);\n            \n            resolve();\n          }).exec();\n        } catch (error) {\n          reject(error);\n        }\n      });\n    },\n\n    goBack() {\n      uni.navigateBack();\n    },\n  }\n}\n</script>\n\n<style>\n/* 页面容器 */\n.page-container {\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(to bottom, #0D0D2B 0%, #1A1A3A 100%);\n  position: relative;\n  overflow: hidden;\n}\n\n/* 背景动画效果 */\n.page-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: radial-gradient(circle at center, transparent 0%, #0D0D2B 70%);\n  animation: pulse 4s ease-in-out infinite;\n  z-index: 0;\n}\n\n@keyframes pulse {\n  0% { opacity: 0.5; }\n  50% { opacity: 0.8; }\n  100% { opacity: 0.5; }\n}\n\n.game-header {\n  text-align: center;\n  margin-bottom: 40rpx;\n  position: relative;\n  z-index: 1;\n  padding-top: 80rpx;  /* 调整顶部间距，原来是120rpx */\n}\n\n.title {\n  font-size: 48rpx;\n  margin-bottom: 10rpx;\n  font-weight: bold;\n}\n\n.neon-text {\n  color: #fff;\n  text-shadow: 0 0 5px #fff,\n               0 0 10px #fff,\n               0 0 20px #ff00de,\n               0 0 30px #ff00de,\n               0 0 40px #ff00de;\n  animation: neon 1.5s ease-in-out infinite alternate;\n}\n\n.subtitle {\n  font-size: 28rpx;\n  color: #00f7ff;\n  margin-top: 10rpx;\n}\n\n.glow-text {\n  color: #00f7ff;\n  text-shadow: 0 0 10px #00f7ff;\n}\n\n.game-container {\n  width: 100%;\n  height: calc(100vh - 200rpx);\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  z-index: 1;\n}\n\n.canvas-container {\n  width: 100%;\n  height: 75vh;\n  position: relative;\n  border-radius: 20rpx;\n  box-shadow: 0 0 20px #ff00de,\n              0 0 40px #ff00de,\n              inset 0 0 20px #ff00de;\n  opacity: 1;\n  transition: opacity 0.3s ease;\n}\n\n.dice-canvas {\n  width: 100%;\n  height: 100%;\n  display: block;\n  background: transparent;\n}\n\n/* 按钮容器 */\n.button-container {\n  margin-top: 40rpx;\n  display: flex;\n  justify-content: center;\n  gap: 20rpx;\n}\n\n.neon-button {\n  background: transparent;\n  border: 2px solid #00f7ff;\n  color: #00f7ff;\n  padding: 20rpx 60rpx;\n  font-size: 32rpx;\n  border-radius: 50rpx;\n  text-transform: uppercase;\n  font-weight: bold;\n  box-shadow: 0 0 10px #00f7ff,\n              inset 0 0 10px #00f7ff;\n  transition: all 0.3s ease;\n}\n\n.neon-button:active {\n  transform: scale(0.95);\n  box-shadow: 0 0 20px #00f7ff,\n              inset 0 0 20px #00f7ff;\n}\n\n/* 弹窗层 */\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(13, 13, 43, 0.95);\n  backdrop-filter: blur(10px);\n  z-index: 99999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  animation: modalFadeIn 0.3s ease;\n}\n\n@keyframes modalFadeIn {\n  from {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.modal-content {\n  background: rgba(26, 26, 58, 0.95);\n  border-radius: 30rpx;\n  padding: 60rpx 40rpx;\n  width: 85%;\n  max-width: 600rpx;\n  border: 2px solid #ff00de;\n  box-shadow: 0 0 30px rgba(255, 0, 222, 0.3),\n              inset 0 0 20px rgba(255, 0, 222, 0.2);\n  animation: contentSlideUp 0.3s ease;\n  transform: translateZ(0);\n}\n\n@keyframes contentSlideUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.modal-title {\n  text-align: center;\n  margin-bottom: 50rpx;\n  font-size: 36rpx;\n  font-weight: bold;\n  letter-spacing: 2px;\n}\n\n.modal-options-container {\n  display: flex;\n  flex-direction: column;\n  gap: 40rpx; /* 两行之间的间距 */\n  margin-top: 20rpx;\n}\n\n.options-row {\n  display: flex;\n  justify-content: center;\n  gap: 60rpx; /* 同一行选项之间的间距 */\n}\n\n.modal-option {\n  width: 100rpx;\n  height: 100rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid #00f7ff;\n  border-radius: 50%;\n  color: #00f7ff;\n  font-size: 36rpx;\n  font-weight: bold;\n  background: rgba(0, 247, 255, 0.1);\n  box-shadow: 0 0 15px rgba(0, 247, 255, 0.3);\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n}\n\n.neon-text-small {\n  font-size: 28rpx;\n  color: #00f7ff;\n  text-shadow: 0 0 5px #00f7ff,\n               0 0 10px #00f7ff;\n}\n\n/* 添加隐藏类 */\n.hidden {\n  opacity: 0;\n  pointer-events: none;\n  transition: opacity 0.3s ease;\n}\n</style>","import MiniProgramPage from '/Users/weitao/Desktop/ThinGift/drink-app/pages/game/dice.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}